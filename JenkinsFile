pipeline {
  agent any

  environment {
    // Use Jenkins credentials plugin to inject DockerHub credentials
    DOCKER_CREDENTIALS = credentials('docker-credentials')
    DOCKER_USER = "${DOCKER_CREDENTIALS_USR}"
    DOCKER_PASS = "${DOCKER_CREDENTIALS_PSW}"
    
    // Define image repos
    REPO_BACKEND = "${DOCKER_USER}/hotstar-backend:latest"
    REPO_FRONTEND = "${DOCKER_USER}/hotstar-frontend:latest"
  }

  stages {

    stage('Checkout') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[
            url: 'https://github.com/Rohsun/Hotstarapplication-deploy',
            credentialsId: 'github-credentials'
          ]]
        ])
      }
    }

    stage('Static Analysis') {
      steps {
        echo 'Running static code analysis...'
      }
    }

    stage('Build & Push Docker Images') {
      steps {
        script {
          sh '''
            echo "Building backend image..."
            docker build -t $REPO_BACKEND ./backend

            echo "Building frontend image..."
            docker build -t $REPO_FRONTEND ./frontend

            echo "Logging into DockerHub..."
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

            echo "Pushing backend image..."
            docker push $REPO_BACKEND

            echo "Pushing frontend image..."
            docker push $REPO_FRONTEND
          '''
        }
      }
    }

    stage('Update Manifests') {
      steps {
        sh '''
          echo "Updating Kubernetes manifests..."

          sed -i "s|image: .*hotstar-backend.*|image: $REPO_BACKEND|" manifests/backend-deployment.yaml
          sed -i "s|image: .*hotstar-frontend.*|image: $REPO_FRONTEND|" manifests/frontend-deployment_
